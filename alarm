import tkinter as tk
from tkinter import filedialog
import datetime
import time
import pygame

def set_alarm():
    alarm_time_str = alarm_entry.get()
    try:
        alarm_time = datetime.datetime.strptime(alarm_time_str, "%H:%M").time()
        return alarm_time
    except ValueError:
        alarm_label.config(text="Invalid time format. Please use HH:MM format.", fg="red")
        return None

def play_alarm_sound(song_file):
    pygame.mixer.init()
    pygame.mixer.music.load(song_file)
    pygame.mixer.music.play()

def check_alarm():
    alarm_time = set_alarm()
    if alarm_time is not None:
        while True:
            current_time = datetime.datetime.now().time()
            if current_time >= alarm_time:
                alarm_label.config(text="Time to wake up!", fg="green")
                song_file = filedialog.askopenfilename(title="Select an audio file", filetypes=[("Audio Files", "*.mp3;*.wav")])
                play_alarm_sound(song_file)
                break
            time.sleep(1)  # Wait for 1 second before checking the time again.

def clear_label():
    alarm_label.config(text="")

# Create the main application window
app = tk.Tk()
app.title("Alarm Clock")

# Create GUI components
alarm_label = tk.Label(app, text="", font=("Helvetica", 16))
alarm_label.pack(pady=10)

alarm_entry = tk.Entry(app, font=("Helvetica", 16))
alarm_entry.pack(pady=10)

set_alarm_button = tk.Button(app, text="Set Alarm", command=check_alarm)
set_alarm_button.pack(pady=10)

clear_button = tk.Button(app, text="Clear", command=clear_label)
clear_button.pack(pady=10)

# Start the main event loop
app.mainloop()